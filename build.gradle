plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.5.31'
    id "com.github.johnrengelman.shadow" version "7.0.0"
}

group = 'me.pavelsgarklavs'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        url = "https://repo.mattstudios.me/artifactory/public/"
    }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.17.1-R0.1-SNAPSHOT'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.5.31'
    implementation("net.kyori:adventure-api:4.9.1")
    implementation("net.kyori:adventure-text-serializer-legacy:4.9.1")
    implementation "dev.triumphteam:triumph-gui:3.0.3"
}
shadowJar {
    relocate("kotlin", "me.pavelsgarklavs.kotlin")
    relocate("dev.triumphteam.gui", "me.pavelsgarklavs.advancedservermanager.gui")
    relocate("net.kyori:adventure-api:4.9.1", "me.pavelsgarklavs.adventure-api" )
    relocate("net.kyori:adventure-text-serializer-legacy:4.9.1", "me.pavelsgarklavs.adventure-text-serializer-legacy" )
}

def targetJavaVersion = 16
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "16"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "16"
    }
}
